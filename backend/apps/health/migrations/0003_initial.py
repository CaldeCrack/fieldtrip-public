# Generated by Django 5.2 on 2025-04-14 10:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('health', '0002_initial'),
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='fieldtripsignup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='healthdatalog',
            name='fieldtrip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.fieldtrip'),
        ),
        migrations.AddField(
            model_name='healthdatalog',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL, verbose_name='Ficha médica del usuario'),
        ),
        migrations.AddField(
            model_name='healthdatalog',
            name='viewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewer', to=settings.AUTH_USER_MODEL, verbose_name='Usuario que revisó la ficha médica'),
        ),
        migrations.AddField(
            model_name='fieldtripsignup',
            name='health_general',
            field=models.ManyToManyField(blank=True, related_name='fieldtrip_signups_general', to='health.healthgral', verbose_name='Ítems generales de salud'),
        ),
        migrations.AddField(
            model_name='healthgralstatus',
            name='fieldtrip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.fieldtrip'),
        ),
        migrations.AddField(
            model_name='healthgralstatus',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='health.healthgral', verbose_name='Ítem'),
        ),
        migrations.AddField(
            model_name='healthgralstatus',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='fieldtripsignup',
            name='health_specific',
            field=models.ManyToManyField(blank=True, related_name='fieldtrip_signups_specific', to='health.healthspecific', verbose_name='Ítems específicos de salud'),
        ),
        migrations.AddField(
            model_name='healthspecificvalue',
            name='fieldtrip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.fieldtrip'),
        ),
        migrations.AddField(
            model_name='healthspecificvalue',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='health.healthspecific', verbose_name='Ítem'),
        ),
        migrations.AddField(
            model_name='healthspecificvalue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddConstraint(
            model_name='healthdatalog',
            constraint=models.UniqueConstraint(fields=('owner', 'viewer', 'fieldtrip', 'timestamp'), name='unique_health_data_log'),
        ),
        migrations.AddConstraint(
            model_name='healthgralstatus',
            constraint=models.UniqueConstraint(fields=('user', 'fieldtrip', 'item'), name='unique_health_gral_status'),
        ),
        migrations.AddConstraint(
            model_name='fieldtripsignup',
            constraint=models.UniqueConstraint(fields=('user', 'fieldtrip'), name='unique_user_fieldtrip_signup'),
        ),
        migrations.AddConstraint(
            model_name='healthspecificvalue',
            constraint=models.UniqueConstraint(fields=('user', 'fieldtrip', 'item'), name='unique_health_specific_value'),
        ),
    ]
