# Generated by Django 5.2 on 2025-04-14 10:54

import apps.user.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30, unique=True, verbose_name='Tipo')),
                ('category', models.IntegerField(choices=[(1, 'Sustancias'), (2, 'Medicamentos')], verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'alergia',
                'verbose_name_plural': 'Alergias',
            },
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'dieta',
                'verbose_name_plural': 'Dietas',
            },
        ),
        migrations.CreateModel(
            name='MedicalInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la institución médica')),
            ],
            options={
                'verbose_name': 'institución médica',
                'verbose_name_plural': 'Instituciones Médicas',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('names', models.CharField(max_length=30, verbose_name='Nombres')),
                ('surnames', models.CharField(max_length=30, verbose_name='Apellidos')),
                ('registration_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número de matrícula')),
                ('RUT', models.CharField(help_text='Ingrese su RUT en el siguiente formato: 12.345.678-9', max_length=12, validators=[django.core.validators.RegexValidator(message='El RUT debe tener el formato 12.345.678-9.', regex='^\\d{1,2}\\.\\d{3}\\.\\d{3}-[\\dkK]$')], verbose_name='RUT')),
                ('emergency_contact', models.CharField(max_length=30, verbose_name='Contacto de emergencia')),
                ('emergency_number', models.IntegerField(validators=[apps.user.models.User.validate_emergency_number], verbose_name='Número de emergencia')),
                ('role', models.CharField(choices=[('teacher', 'Teacher'), ('student', 'Student'), ('admin', 'Admin')], max_length=10, verbose_name='Role')),
                ('has_previous_experience', models.BooleanField(verbose_name='¿Tiene experiencia previa en salidas a campo?')),
                ('diet_info', models.CharField(blank=True, help_text='Ejemplo: "No como azúcar"', max_length=100, null=True, verbose_name='Información extra de alimentación')),
                ('blood_type', models.IntegerField(choices=[(1, 'A'), (2, 'B'), (3, 'AB'), (4, 'O')], null=True, verbose_name='Tipo sanguíneo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('allergies', models.ManyToManyField(blank=True, related_name='users', to='user.allergy')),
                ('diet_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.diet', verbose_name='Tipo de alimentación')),
                ('preferred_medical_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.medicalinstitution', verbose_name='Institución médica preferida')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
    ]
